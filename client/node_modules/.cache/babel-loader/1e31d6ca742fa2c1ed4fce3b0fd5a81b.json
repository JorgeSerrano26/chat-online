{"ast":null,"code":"var _jsxFileName = \"/Users/jserrano/Desktop/Chat/client/src/pages/ChatView/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport userContext from '../../hooks/userContext';\nimport './styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ENDPOINT = process.env.REACT_APP_ENDPOINT || \"http://localhost:5000\";\nlet socket;\n\nconst ChatView = () => {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  const {\n    userData\n  } = useContext(userContext);\n\n  const emmitMessage = () => {\n    socket.emit(\"sendMessage\", {\n      message,\n      name: userData.name,\n      room: userData.room\n    });\n  };\n\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.on(\"bot_message\", data => {\n      console.log(data);\n      setMessages([...messages, data]);\n    });\n    socket.on(\"message\", data => {\n      console.log(data);\n      setMessages([...messages, data]);\n    }); // CLEAN UP THE EFFECT\n\n    return () => socket.disconnect();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"room title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map(m => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"m.name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"m.content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 32\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ChatView, \"rYdgHpw6+QwtL6RY2SLKTeFR4po=\");\n\n_c = ChatView;\nexport default ChatView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatView\");","map":{"version":3,"sources":["/Users/jserrano/Desktop/Chat/client/src/pages/ChatView/index.tsx"],"names":["useContext","useEffect","useState","io","userContext","ENDPOINT","process","env","REACT_APP_ENDPOINT","socket","ChatView","messages","setMessages","userData","emmitMessage","emit","message","name","room","on","data","console","log","disconnect","map","m"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAO,eAAP;;AAEA,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,kBAAZ,IAAkC,uBAAnD;AACA,IAAIC,MAAJ;;AAEA,MAAMC,QAAkB,GAAG,MAAM;AAAA;;AAC7B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAa,EAAb,CAAxC;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAeb,UAAU,CAACI,WAAD,CAA/B;;AAGA,QAAMU,YAAY,GAAG,MAAM;AACvBL,IAAAA,MAAM,CAACM,IAAP,CAAY,aAAZ,EAA2B;AACvBC,MAAAA,OADuB;AAEvBC,MAAAA,IAAI,EAAEJ,QAAQ,CAACI,IAFQ;AAGvBC,MAAAA,IAAI,EAAEL,QAAQ,CAACK;AAHQ,KAA3B;AAKH,GAND;;AAQAjB,EAAAA,SAAS,CAAC,MAAW;AACjBQ,IAAAA,MAAM,GAAGN,EAAE,CAACE,QAAD,CAAX;AAEAI,IAAAA,MAAM,CAACU,EAAP,CAAU,aAAV,EAA0BC,IAAD,IAAe;AACpCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAR,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcS,IAAd,CAAD,CAAX;AACH,KAHD;AAKAX,IAAAA,MAAM,CAACU,EAAP,CAAU,SAAV,EAAsBC,IAAD,IAAe;AAChCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAR,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcS,IAAd,CAAD,CAAX;AACH,KAHD,EARiB,CAajB;;AACA,WAAO,MAAMX,MAAM,CAACc,UAAP,EAAb;AACH,GAfQ,EAeN,EAfM,CAAT;AAiBA,sBAAO;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,eAEH;AAAA,gBACKZ,QAAQ,CAACa,GAAT,CAAaC,CAAC,iBAAI;AAAA,gCACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADe,eAEf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFe;AAAA;AAAA;AAAA;AAAA;AAAA,cAAlB;AADL;AAAA;AAAA;AAAA;AAAA,YAFG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AASH,CAvCD;;GAAMf,Q;;KAAAA,Q;AAyCN,eAAeA,QAAf","sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport userContext from '../../hooks/userContext';\nimport './styles.scss';\n\nconst ENDPOINT = process.env.REACT_APP_ENDPOINT || \"http://localhost:5000\";\nlet socket: any;\n\nconst ChatView: React.FC = () => {\n    const [messages, setMessages] = useState<Array<any>>([]);\n    const { userData } = useContext(userContext);\n\n\n    const emmitMessage = () => {\n        socket.emit(\"sendMessage\", {\n            message,\n            name: userData.name,\n            room: userData.room\n        });\n    }\n\n    useEffect((): any => {\n        socket = io(ENDPOINT);\n\n        socket.on(\"bot_message\", (data: any) => {\n            console.log(data);\n            setMessages([...messages, data]);\n        });\n\n        socket.on(\"message\", (data: any) => {\n            console.log(data);\n            setMessages([...messages, data]);\n        });\n\n        // CLEAN UP THE EFFECT\n        return () => socket.disconnect();\n    }, []);\n\n    return <div className=\"chat\">\n        <h1>room title</h1>\n        <ul>\n            {messages.map(m => <li>\n                <div>m.name</div>\n                <div>m.content</div>\n                </li>)}\n        </ul>\n    </div>\n}\n\nexport default ChatView;"]},"metadata":{},"sourceType":"module"}
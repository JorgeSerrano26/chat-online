{"ast":null,"code":"var _jsxFileName = \"/Users/jserrano/Desktop/Chat/client/src/pages/ChatView/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport userContext from '../../hooks/userContext';\nimport './styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ENDPOINT = process.env.REACT_APP_ENDPOINT || \"http://localhost:5000\";\nlet socket;\n\nconst ChatView = () => {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  const [users, setUsers] = useState([]);\n  const {\n    userData\n  } = useContext(userContext);\n  const [message, setMessage] = useState(\"\");\n\n  const emmitMessage = () => {\n    socket.emit(\"sendMessage\", {\n      name: userData.name,\n      room: userData.room\n    });\n  };\n\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.on(\"bot_message\", data => {\n      console.log(data);\n      setMessages([...messages, data]);\n    });\n    socket.on(\"message\", data => {\n      console.log(data);\n      setMessages([...messages, data]);\n    });\n    socket.on('roomData', ({\n      room,\n      users\n    }) => {\n      setUsers(users);\n    }); // CLEAN UP THE EFFECT\n\n    return () => socket.disconnect();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: userData.room\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map(m => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: m.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: m.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 32\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: emmitMessage,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: message,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: message.length === 0,\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ChatView, \"2Gbrp2Wsqx63IhAcswhQoltUJmk=\");\n\n_c = ChatView;\nexport default ChatView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatView\");","map":{"version":3,"sources":["/Users/jserrano/Desktop/Chat/client/src/pages/ChatView/index.tsx"],"names":["useContext","useEffect","useState","io","userContext","ENDPOINT","process","env","REACT_APP_ENDPOINT","socket","ChatView","messages","setMessages","users","setUsers","userData","message","setMessage","emmitMessage","emit","name","room","on","data","console","log","disconnect","map","m","author","content","e","target","value","length"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport userContext from '../../hooks/userContext';\nimport './styles.scss';\n\nconst ENDPOINT = process.env.REACT_APP_ENDPOINT || \"http://localhost:5000\";\nlet socket: any;\n\nconst ChatView: React.FC = () => {\n    const [messages, setMessages] = useState<Array<any>>([]);\n    const [users, setUsers] = useState<Array<any>>([]);\n    const { userData } = useContext(userContext);\n    const [message, setMessage] = useState<string>(\"\");\n\n    const emmitMessage = () => {\n        socket.emit(\"sendMessage\", {\n            name: userData.name,\n            room: userData.room\n        });\n    }\n\n    useEffect((): any => {\n        socket = io(ENDPOINT);\n\n        socket.on(\"bot_message\", (data: any) => {\n            console.log(data);\n            setMessages([...messages, data]);\n        });\n\n        socket.on(\"message\", (data: any) => {\n            console.log(data);\n            setMessages([...messages, data]);\n        });\n\n        socket.on('roomData', ({room, users}: any) => {\n            setUsers(users)\n        })\n\n        // CLEAN UP THE EFFECT\n        return () => socket.disconnect();\n    }, []);\n\n    return <div className=\"chat\">\n        <h1>{userData.room}</h1>\n        <div>   \n            <ul>\n                {}\n            </ul>\n        </div>\n        <ul>\n            {messages.map(m => <li>\n                <div>{m.author}</div>\n                <div>{m.content}</div>\n                </li>)}\n        </ul>\n        <div>\n            <form onSubmit={emmitMessage}>\n                <input value={message} onChange={(e: any) => setMessage(e.target.value)}/>\n                <button type=\"submit\" disabled={message.length === 0}>Enviar</button>\n            </form>\n        </div>\n        \n    </div>\n}\n\nexport default ChatView;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/jserrano/Desktop/Chat/client/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ENDPOINT = 'http://localhost:5000';\nconst socket = socketIOClient(ENDPOINT);\n\nconst App = () => {\n  _s();\n\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    socket.on(\"emmit:message\", data => {\n      console.log(data);\n      setMessages([...messages, data]);\n    }); // CLEAN UP THE EFFECT\n\n    return () => socket.disconnect();\n  }, []);\n\n  const emmitMessage = () => {\n    socket.emit(\"send:message\", {\n      message,\n      author: \"jorge\"\n    });\n    setMessage(\"\");\n  };\n\n  const changeMessage = e => {\n    const {\n      target: {\n        value\n      }\n    } = e;\n    setMessage(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: changeMessage,\n      value: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: emmitMessage,\n      children: \"Emitir\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"r7oSiqxTwlZ7iaM02ZQHmIPeE1o=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jserrano/Desktop/Chat/client/src/App.tsx"],"names":["useEffect","useState","socketIOClient","ENDPOINT","socket","App","message","setMessage","messages","setMessages","on","data","console","log","disconnect","emmitMessage","emit","author","changeMessage","e","target","value"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAO,WAAP;;AAEA,MAAMC,QAAQ,GAAG,uBAAjB;AACA,MAAMC,MAAM,GAAGF,cAAc,CAACC,QAAD,CAA7B;;AAEA,MAAME,GAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAS,EAAT,CAAtC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAa,EAAb,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAW;AACnBI,IAAAA,MAAM,CAACM,EAAP,CAAU,eAAV,EAA2BC,IAAI,IAAI;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAF,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcG,IAAd,CAAD,CAAX;AACD,KAHD,EADmB,CAMnB;;AACA,WAAO,MAAMP,MAAM,CAACU,UAAP,EAAb;AACD,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMC,YAAY,GAAG,MAAM;AACzBX,IAAAA,MAAM,CAACY,IAAP,CAAY,cAAZ,EAA4B;AAC1BV,MAAAA,OAD0B;AAE1BW,MAAAA,MAAM,EAAE;AAFkB,KAA5B;AAKAV,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAPD;;AASA,QAAMW,aAAa,GAAIC,CAAD,IAAY;AAChC,UAAM;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA;AAAF;AAAV,QAAwBF,CAA9B;AACAZ,IAAAA,UAAU,CAACc,KAAD,CAAV;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAO,MAAA,QAAQ,EAAEH,aAAjB;AAAgC,MAAA,KAAK,EAAEZ;AAAvC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAES,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAlCD;;GAAMV,G;;KAAAA,G;AAoCN,eAAeA,GAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport './App.css';\n\nconst ENDPOINT = 'http://localhost:5000';\nconst socket = socketIOClient(ENDPOINT);\n\nconst App: React.FC = () => {\n  const [message, setMessage] = useState<string>(\"\");\n  const [messages, setMessages] = useState<Array<any>>([]);\n\n  useEffect((): any => {\n    socket.on(\"emmit:message\", data => {\n      console.log(data);\n      setMessages([...messages, data]);\n    });\n\n    // CLEAN UP THE EFFECT\n    return () => socket.disconnect();\n  }, []);\n\n  const emmitMessage = () => {\n    socket.emit(\"send:message\", {\n      message,\n      author: \"jorge\",\n\n    });\n    setMessage(\"\");\n  }\n\n  const changeMessage = (e: any) => {\n    const { target: { value } } = e;\n    setMessage(value);\n  }\n\n  return (\n    <div className=\"App\">\n      <input onChange={changeMessage} value={message} />\n      <button onClick={emmitMessage}>Emitir</button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/jserrano/Desktop/Chat/client/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport UserContext from './hooks/userContext';\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport './App.css';\nimport ChatView from './pages/ChatView';\nimport LoginView from './pages/LoginView';\nimport Authroute from './components/Authroute';\nimport UnauthRoute from './components/Unauthroute';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ENDPOINT = 'http://localhost:5000';\nconst socket = socketIOClient(ENDPOINT);\n\nconst App = () => {\n  _s();\n\n  const [connected, setConnected] = useState(false);\n  const [userData, setUserData] = useState({\n    room: \"sala-1\",\n    name: \"\"\n  });\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    socket.on(\"bot_message\", data => {\n      console.log(data);\n      setMessages([...messages, data]);\n    });\n    socket.on(\"message\", data => {\n      console.log(data);\n      setMessages([...messages, data]);\n    }); // CLEAN UP THE EFFECT\n\n    return () => socket.disconnect();\n  }, []);\n\n  const emmitMessage = () => {\n    socket.emit(\"sendMessage\", {\n      message,\n      name: userData.name,\n      room: userData.room\n    });\n    setMessage(\"\");\n  };\n\n  const changeMessage = e => {\n    const {\n      target: {\n        value\n      }\n    } = e;\n    setMessage(value);\n  };\n\n  const changeName = e => {\n    const {\n      target: {\n        value = \"\"\n      }\n    } = e;\n    setUserData({ ...userData,\n      name: value\n    });\n  };\n\n  const connect = () => {\n    socket.emit('join', { ...userData\n    });\n    setConnected(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      userData,\n      connected\n    },\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(UnauthRoute, {\n          path: [\"/\", \"/login\"],\n          children: /*#__PURE__*/_jsxDEV(LoginView, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Authroute, {\n          path: \"/chat\",\n          children: /*#__PURE__*/_jsxDEV(ChatView, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"6LvpVIMmeP7Yj1S1+FatIhD2LTs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jserrano/Desktop/Chat/client/src/App.tsx"],"names":["useEffect","useState","socketIOClient","UserContext","BrowserRouter","Router","Switch","ChatView","LoginView","Authroute","UnauthRoute","ENDPOINT","socket","App","connected","setConnected","userData","setUserData","room","name","message","setMessage","messages","setMessages","on","data","console","log","disconnect","emmitMessage","emit","changeMessage","e","target","value","changeName","connect"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport UserContext from './hooks/userContext';\nimport IUserData from './classes/IUserData';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport './App.css';\nimport ChatView from './pages/ChatView';\nimport LoginView from './pages/LoginView';\nimport Authroute from './components/Authroute';\nimport UnauthRoute from './components/Unauthroute';\n\nconst ENDPOINT = 'http://localhost:5000';\nconst socket = socketIOClient(ENDPOINT);\n\nconst App: React.FC = () => {\n  const [connected, setConnected] = useState<boolean>(false);\n  const [userData, setUserData] = useState<IUserData>({\n    room: \"sala-1\",\n    name: \"\"\n  });\n  const [message, setMessage] = useState<string>(\"\");\n  const [messages, setMessages] = useState<Array<any>>([]);\n\n  useEffect((): any => {\n    socket.on(\"bot_message\", data => {\n      console.log(data);\n      setMessages([...messages, data]);\n    });\n    socket.on(\"message\", data => {\n      console.log(data);\n      setMessages([...messages, data]);\n    });\n\n    // CLEAN UP THE EFFECT\n    return () => socket.disconnect();\n  }, []);\n\n  const emmitMessage = () => {\n    socket.emit(\"sendMessage\", {\n      message,\n      name: userData.name,\n      room: userData.room\n    });\n    setMessage(\"\");\n  }\n\n  const changeMessage = (e: any) => {\n    const { target: { value } } = e;\n    setMessage(value);\n  }\n\n  const changeName = (e: any) => {\n    const { target: { value = \"\" } } = e;\n\n    setUserData({\n      ...userData,\n      name: value\n    });\n  }\n\n  const connect = () => {\n    socket.emit('join', {\n      ...userData\n    });\n    setConnected(true)\n  }\n\n  return (\n    <UserContext.Provider value={{ userData, connected }}>\n      <Router>\n        <Switch>\n          <UnauthRoute path={[\"/\", \"/login\"]}>\n              <LoginView />\n          </UnauthRoute>\n          <Authroute path=\"/chat\">\n              <ChatView />\n          </Authroute>\n        </Switch>\n      </Router>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
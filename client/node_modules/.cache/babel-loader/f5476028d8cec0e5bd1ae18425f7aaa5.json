{"ast":null,"code":"var _jsxFileName = \"/Users/jserrano/Desktop/Chat/client/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport UserContext from './hooks/userContext';\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport ChatView from './pages/ChatView';\nimport LoginView from './pages/LoginView';\nimport Authroute from './components/Authroute';\nimport UnauthRoute from './components/Unauthroute';\nimport './App.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [connected, setConnected] = useState(false);\n  const [userData, setUserData] = useState({\n    room: \"\",\n    name: \"\"\n  });\n\n  const connect = props => {\n    socket.emit('join', props, error => {\n      if (error) {\n        alert(error);\n        return;\n      }\n\n      setUserData(props);\n      setConnected(true);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      userData,\n      connected,\n      connect\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(UnauthRoute, {\n            path: [\"/\", \"/login\"],\n            exact: true,\n            children: /*#__PURE__*/_jsxDEV(LoginView, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Authroute, {\n            path: \"/chat\",\n            exact: true,\n            children: /*#__PURE__*/_jsxDEV(ChatView, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"oueio6jAnotSK1E3UpQWvdKiALs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jserrano/Desktop/Chat/client/src/App.tsx"],"names":["useState","UserContext","BrowserRouter","Router","Switch","ChatView","LoginView","Authroute","UnauthRoute","App","connected","setConnected","userData","setUserData","room","name","connect","props","socket","emit","error","alert"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,WAAP,MAAwB,qBAAxB;AAEA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,QAGO,kBAHP;AAIA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAO,YAAP;;;AAEA,MAAMC,GAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAU,KAAV,CAA1C;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAY;AAClDc,IAAAA,IAAI,EAAE,EAD4C;AAElDC,IAAAA,IAAI,EAAE;AAF4C,GAAZ,CAAxC;;AAKA,QAAMC,OAAO,GAAIC,KAAD,IAAsB;AACpCC,IAAAA,MAAM,CAACC,IAAP,CAAY,MAAZ,EAAoBF,KAApB,EAA4BG,KAAD,IAAgB;AACzC,UAAIA,KAAJ,EAAW;AACTC,QAAAA,KAAK,CAACD,KAAD,CAAL;AACA;AACD;;AACDP,MAAAA,WAAW,CAACI,KAAD,CAAX;AACAN,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KAPD;AAQD,GATD;;AAWA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAF;AAAYF,MAAAA,SAAZ;AAAuBM,MAAAA;AAAvB,KAA7B;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE,QAAC,MAAD;AAAA,+BACE,QAAC,MAAD;AAAA,kCACE,QAAC,WAAD;AAAa,YAAA,IAAI,EAAE,CAAC,GAAD,EAAM,QAAN,CAAnB;AAAoC,YAAA,KAAK,MAAzC;AAAA,mCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,SAAD;AAAW,YAAA,IAAI,EAAC,OAAhB;AAAwB,YAAA,KAAK,MAA7B;AAAA,mCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAlCD;;GAAMP,G;;KAAAA,G;AAoCN,eAAeA,GAAf","sourcesContent":["import { useState } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport UserContext from './hooks/userContext';\nimport IUserData from './classes/IUserData';\nimport {\n  BrowserRouter as Router,\n  Switch,\n} from \"react-router-dom\";\nimport ChatView from './pages/ChatView';\nimport LoginView from './pages/LoginView';\nimport Authroute from './components/Authroute';\nimport UnauthRoute from './components/Unauthroute';\nimport './App.scss';\n\nconst App: React.FC = () => {\n  const [connected, setConnected] = useState<boolean>(false);\n  const [userData, setUserData] = useState<IUserData>({\n    room: \"\",\n    name: \"\"\n  });\n\n  const connect = (props: IUserData) => {\n    socket.emit('join', props, (error: any) => {\n      if (error) {\n        alert(error);\n        return;\n      }\n      setUserData(props);\n      setConnected(true);\n    });\n  }\n\n  return (\n    <UserContext.Provider value={{ userData, connected, connect }}>\n      <div className=\"App\">\n        <Router>\n          <Switch>\n            <UnauthRoute path={[\"/\", \"/login\"]} exact>\n              <LoginView />\n            </UnauthRoute>\n            <Authroute path=\"/chat\" exact>\n              <ChatView />\n            </Authroute>\n          </Switch>\n        </Router>\n      </div>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}